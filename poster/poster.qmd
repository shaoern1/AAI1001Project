---
title: Exploring the Insights within the Global Happiness Index
format:
  poster-typst: 
    size: "36x24"
    poster-authors: "Toh Shao Ern, Kuick Si Qi, Wong Khin Foong, Sebestian Fernandez, Yu Haotong"
    departments: "Group 12"
    univ-logo-scale: "40"
    num-columns: "3"
    institution-logo: "./images/SIT-Logo.png"
    footer-text: "Prepared for Dr Hua, By Group 12"
    footer-url: "https://singaporetech.edu.sg"
    footer-emails: "sit@singaporetech.edu.sg"
    footer-color: "ebcfb2"
---


```{r setup, include=FALSE}
# Set a CRAN mirror
options(repos = c(CRAN = "https://cloud.r-project.org"))
if (!require("tidyverse")) install.packages("tidyverse", dependencies = TRUE)
if (!require("sf")) install.packages("sf", dependencies = TRUE)
if (!require("rnaturalearth")) install.packages("rnaturalearth", dependencies = TRUE)
if (!require("countrycode")) install.packages("countrycode", dependencies = TRUE)
if (!require("ggrepel")) install.packages("ggrepel", dependencies = TRUE)
if (!require("readxl")) install.packages("readxl", dependencies = TRUE)
if (!require("knitr")) install.packages("knitr", dependencies = TRUE)
if (!require("dplyr")) install.packages("dplyr", dependencies = TRUE)
if (!require("viridis")) install.packages("viridis", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
if (!require("grid")) install.packages("grid", dependencies = TRUE)
if (!require("ggplot2")) install.packages("ggplot2", dependencies = TRUE)

library(scales)
library(readxl)
library(dplyr)
library(knitr)
library(tidyverse) # load dplyr, ggplot2, stringr, etc.
library(tmap)
library(sf) # working with geographic simple features in R
library(rnaturalearth) # World map data from Natural Earth
library(countrycode) # get ISO code from country names
library(ggrepel) # "ggplot2" extension for overlapping text labels
library(viridis) # color palettes for "ggplot2")
library(gridExtra) # arrange multiple grid-based plots on a page
library(grid) # grid graphics system for R
library(ggplot2) # create elegant data visualizations using the Grammar of Graphics
```

```{r, include=FALSE, warning=FALSE}
df <- read_excel("data/DataForTable2.1.xls")
data(World)

countries <- select(World, iso_a3, name)
countries <- countries$name

# how many countries are missing in the dataset use Country name
missing_countries <- setdiff(countries, unique(df$"Country name"))

df <- df %>%
  filter(year %in% c(2021, 2022, 2023))

# Rename the columns
colnames(df) <- c("country", "year", "score", colnames(df)[4:ncol(df)])

# Keep only the specified columns
df <- df[, c("country", "year", "score")]

# List of all countries in your data
all_countries <- unique(df$country)

# List of years to ensure each country has entries for each year
years <- c(2021, 2022, 2023)

# Create a data frame with all combinations of countries and years
complete_df <- expand.grid(country = all_countries, year = years)

# Add country codes to the complete data frame
complete_df$country_code <- countrycode(complete_df$country, origin = "country.name", destination = "iso3c")

# Merge the complete data frame with the original data
df_combined <- left_join(complete_df, df, by = c("country", "year"))

# Calculate the mean score for each country
country_means <- df_combined %>%
  group_by(country) %>%
  summarize(mean_score = mean(score, na.rm = TRUE))

# Merge the country means back into the combined data
df_combined <- left_join(df_combined, country_means, by = "country")

# Fill any remaining NA values with the mean score of the respective country
df_combined <- df_combined %>%
  mutate(score = ifelse(is.na(score), mean_score, score))

# Check for any remaining missing values
missing_scores <- df_combined %>% filter(is.na(score))
if (nrow(missing_scores) > 0) {
  warning("There are still countries with missing scores.")
}

region <- read_csv("data/world-regions-according-to-the-world-bank.csv")
# head(region)

df_combined <- left_join(df_combined, region, by = c("country_code" = "Code"))
# find empty rows in "World Region according to the World Bank"

missing_region <- df_combined %>% filter(is.na(`World Region according to the World Bank`))
# print(missing_region)

# put taiwan within china
df_combined$`World Region according to the World Bank`[which(df_combined$country == "Taiwan Province of China")] <- "East Asia and Pacific"

df_combined$`World Region according to the World Bank`[which(df_combined$`World Region according to the World Bank` == "North America")] <- "Latin America and Caribbean"

df_combined$`World Region according to the World Bank`[which(df_combined$`World Region according to the World Bank` == "Latin America and Caribbean")] <- "Americas"
```

# Introduction

## Global Happiness Score

The Life Ladder score, also known as the World Happiness Score, is derived from the Gallup World Poll data. The score is typically calculated based on several key variables that reflect the well-being and quality of life in different countries. Hereâ€™s a general outline of the formula and components involved in calculating the World Happiness Score:

| **Component** | **Description** |
|---------------|-----------------|
| Life Evaluations (Ladder Question) | Respondents rate their current life from 0 (worst) to 10 (best). |
| GDP per Capita | Natural logarithm of GDP per capita (PPP terms). |
| Social Support | Binary response to: "Do you have relatives or friends you can count on for help if needed?" |
| Healthy Life Expectancy | Life expectancy at birth.|
| Freedom to Make Life Choices | Binary response to: "Are you satisfied with your freedom to choose what you do with your life?" |
| Generosity | Donations to charity in the past month, adjusted for GDP per capita |
| Perceptions of Corruption | Perceived corruption in government and business. |
| Positive and Negative Affect | Average responses to questions about recent experiences of positive and negative emotions (e.g., laughter, enjoyment, sadness, and anger). |

The World Happiness Score is calculated using a regression model that combines these variables to predict the happiness score for each country.

## Visualcapitalist's Global Happiness Levels Report

The following @fig-Visualcapitalist-map from [Visualcapitalist](https://www.visualcapitalist.com/a-map-of-global-happiness-by-country-in-2024/) presents the global happiness levels in 2024, as reported in the **World Happiness Report** ([WHR](https://happiness-report.s3.amazonaws.com/2024/WHR+24.pdf)). The static world map provides a visual representation of the happiness scores across different countries, with the color gradient indicating the relative happiness levels. The visualization aims to highlight the disparities in happiness levels worldwide and the factors that contribute to these variations. However, through our critical analysis, we identified several strengths and weaknesses in the original visualization that we aim to improve as detailed below.

::: {#fig-Visualcapitalist-map layout-ncol=2 layout-nrow=2}

![Global Overview World map of Happiness Levels in 2024](images/OC-World-Happiness-Report-2024_Mar19.png){width="60%" #fig-1}

![Inconsistent Labeling example](Images/inconsistent_labeling_weakness.png){width="60%" #fig-3}

Visualcapitalist Global Happiness Levels Report

:::

\

![Linear scale of Happiness score of each country by region](images/linear_scale_of_happiness_region.png){width="60%" fig-align="center" #fig-4}

\

# Methods

## Data Understanding and Cleaning

![Data Prep Pipeline](images/data_prep_pipeline.png){width="60%"}

## Create violin plot

```{r, fig.width=10, fig.align='center', echo=FALSE, warning=FALSE}
# Base plot
base_plot <- ggplot(df_combined, aes(y = `World Region according to the World Bank`, x = score)) +
  geom_violin(trim = TRUE, fill = "lightblue") +  # Create horizontal violin plots with single color
  geom_boxplot(width = 0.1, fill = "white", color = "black", orientation = "y") +  # Overlay boxplots on the violins horizontally
  scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +  # Set the x-axis limits and breaks
  labs(title = "Happiness Scores by World Region (2021-2023)", y = "World Region", x = "Happiness Score") +
  theme_minimal() +  # Use a minimal theme
  theme(
    plot.title = element_text(hjust = 0.5)  # Center the plot title
  )

# Highlight the top and bottom of each region with text labels of the respective country
highlight_data <- df_combined %>%
  group_by(`World Region according to the World Bank`) %>%
  filter(score == max(score) | score == min(score))

# Add the highlighted points and text labels to the base plot
final_plot <- base_plot +
  geom_point(data = highlight_data, aes(y = `World Region according to the World Bank`, x = score), size = 3, color = "darkred") +  # Single color for points
  geom_text_repel(data = highlight_data, aes(y = `World Region according to the World Bank`, x = score, label = country),
                  nudge_x = ifelse(highlight_data$score >= mean(highlight_data$score), 1, -1), nudge_y = 0.3, direction = "y") +
  labs(title = "Happiness Scores by World Region (2021-2023)\nwith Top and Bottom Countries Highlighted")

# Print the final plot
print(final_plot)

```

## World Map

```{r, fig.width=10, fig.align='center', echo=FALSE, warning=FALSE}
# Create bins for the scores with 0.5 intervals
bins <- seq(0, 10, by = 0.5)
labels <- paste0(bins[-length(bins)], "-", bins[-1])
df_combined <- df_combined %>%
  mutate(score_bin = cut(score, breaks = bins, labels = labels, include.lowest = TRUE, right = FALSE))

# Check for any remaining missing values
missing_scores <- df_combined %>% filter(is.na(score))
if (nrow(missing_scores) > 0) {
  warning("There are still countries with missing scores.")
}

# Inspect the data for missing scores
# print(missing_scores)

# Get world data
world <- ne_countries(scale = "small", returnclass = "sf")

# Compute the average score for each country over the years
df_avg <- df_combined %>%
  group_by(country_code) %>%
  summarize(avg_score = mean(score, na.rm = TRUE))

# Merge world data with the average scores
world_data_avg <- left_join(world, df_avg, by = c("iso_a3" = "country_code"))

# Check for missing data after the join
missing_world_avg <- world_data_avg %>% filter(is.na(avg_score))

# print(missing_world_avg)

# Plot the average data
world_plot <- ggplot() +
  geom_sf(data = world_data_avg, aes(fill = avg_score), color = "black") +
  scale_fill_viridis_c(option = "plasma", na.value = "grey90", name = "Average Score") +
  theme_minimal() +
  theme(legend.position = "bottom") +
  labs(title = "World Map of Happiness - Average (2021-2023)", fill = "Average Score") +
  theme(plot.title = element_text(hjust = 0.5)) +
  coord_sf(crs = "+proj=robin")

print(world_plot)
```

## Distribution Chart of Scores

```{r, fig.width=10, fig.align='center', echo=FALSE, warning=FALSE}
ggplot(df_combined, aes(x = score)) +
  geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black") +
  geom_density(aes(y = 0.5 * ..count..), color = "red", size = 1, linetype = "dotted") +
  stat_bin(binwidth = 0.5, geom = "text", aes(label = ifelse(..count.. > 0, ..count.., "")), vjust = -0.5, color = "black", position = position_stack(vjust = 1.0)) +
  scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
  scale_y_continuous(limits = c(0, 100)) +
  labs(title = "Distribution of Happiness Scores (2021-2023)",
       x = "Happiness Score",
       y = "Count") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

```

# Findings


# Conclusion


# Acknowledgement

